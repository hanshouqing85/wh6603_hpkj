[斗地主(0.1倍)]

//刷新房间配置
Refresh = 0			;是否刷新配置

//库存更新
RefreshStorage = 0		; 是否刷新库存
StorageStart=0			; 库存起始值 
StorageDeduct=50		; 库存衰减值 StorageDeduct/1000 千分比
StorageMin=0			; 库存最小值
StorageMax=2			; 库存最大值
StorageRatio=50			; 库存控制输赢比例 百分之N 默认配置 游戏刚启动时读取  越大机器人赢率越高
StorageMinRatio=100		; 库存控制输赢比例 百分之N 当库存少于或等于最小值时输赢机率读取这里的值	 越大机器人赢率越高 杀分
StorageMaxRatio=0		; 库存控制输赢比例 百分之N 当库存大于或等于最大值时输赢机率读取这里的值  越大机器人赢率越高 送分
StorageEating=10		; 吃分百分比 当库存大于或者等于最大值时,系统一次性吃掉库存,并且开始送分机制
MaxScore=100			; 总注最大值,如果总注超过这个值,系统必定杀分
//库存减少值,每局结束之后会从库存值中减去此值,执行之后此值归0
StorageOff=0			
//总输赢分每局都会计算并且保存,包含税收,吃分,库存衰减 表示系统共赚多少钱
StorageLimit=0
////////////////////库存控制结束

//机器人存款取款
RobotScoreMin=30				; 机器人的分数小于该值时执行取款
RobotScoreMax=500				; 机器人的分数大于该值时执行存款
RobotBankGet=100				; 取款最小数额(取款数是该值以上的一个随机数)
RobotBankGetBanker=500			; 取款最大数额(此数值一定要大于RobotBankGet)
RobotBankStoMul=33				; 存款百分比，百分之N 

////////////////////机器人控制结束

//控制玩家输赢局数大于0
CheatCount=0				
WinnerUserID=1 				;控制玩家的ID号


[斗地主(0.5倍)]

//刷新房间配置
Refresh = 0			; 是否刷新配置

//库存更新
RefreshStorage = 0		; 是否刷新库存
StorageStart=0			; 库存起始值 
StorageDeduct=50		; 库存衰减值 StorageDeduct/1000 千分比
StorageMin=0			; 库存最小值
StorageMax=5			; 库存最大值
StorageRatio=50			; 库存控制输赢比例 百分之N 默认配置 游戏刚启动时读取  越大机器人赢率越高
StorageMinRatio=100		; 库存控制输赢比例 百分之N 当库存少于或等于最小值时输赢机率读取这里的值	 越大机器人赢率越高 杀分
StorageMaxRatio=0		; 库存控制输赢比例 百分之N 当库存大于或等于最大值时输赢机率读取这里的值  越大机器人赢率越高 送分
StorageEating=20		; 吃分百分比 当库存大于或者等于最大值时,系统一次性吃掉库存,并且开始送分机制
MaxScore=100			; 总注最大值,如果总注超过这个值,系统必定杀分
//库存减少值,每局结束之后会从库存值中减去此值,执行之后此值归0
StorageOff=0			
//总输赢分每局都会计算并且保存,包含税收,吃分,库存衰减 表示系统共赚多少钱
StorageLimit=0	
////////////////////库存控制结束


//机器人存款取款
RobotScoreMin=30				; 机器人的分数小于该值时执行取款
RobotScoreMax=500				; 机器人的分数大于该值时执行存款
RobotBankGet=100				; 取款最小数额(取款数是该值以上的一个随机数)
RobotBankGetBanker=500			; 取款最大数额(此数值一定要大于RobotBankGet)
RobotBankStoMul=33				; 存款百分比，百分之N 


////////////////////机器人控制结束

//控制玩家输赢局数大于0
CheatCount=0				
WinnerUserID=1 				;控制玩家的ID号


[斗地主(1倍)]

//刷新房间配置
Refresh = 0			;是否刷新配置

//库存更新
RefreshStorage = 0		; 是否刷新库存
StorageStart=0			; 库存起始值 
StorageDeduct=50		; 库存衰减值 StorageDeduct/1000 千分比
StorageMin=0			; 库存最小值
StorageMax=12			; 库存最大值
StorageRatio=60			; 库存控制输赢比例 百分之N 默认配置 游戏刚启动时读取  越大机器人赢率越高
StorageMinRatio=100		; 库存控制输赢比例 百分之N 当库存少于或等于最小值时输赢机率读取这里的值	 越大机器人赢率越高 杀分
StorageMaxRatio=0		; 库存控制输赢比例 百分之N 当库存大于或等于最大值时输赢机率读取这里的值  越大机器人赢率越高 送分
StorageEating=20		; 吃分百分比 当库存大于或者等于最大值时,系统一次性吃掉库存,并且开始送分机制
MaxScore=100			; 总注最大值,如果总注超过这个值,系统必定杀分
//库存减少值,每局结束之后会从库存值中减去此值,执行之后此值归0
StorageOff=0			
//总输赢分每局都会计算并且保存,包含税收,吃分,库存衰减 表示系统共赚多少钱
StorageLimit=0
////////////////////库存控制结束


//机器人存款取款

RobotScoreMin=30				; 机器人的分数小于该值时执行取款
RobotScoreMax=500				; 机器人的分数大于该值时执行存款
RobotBankGet=100				; 取款最小数额(取款数是该值以上的一个随机数)
RobotBankGetBanker=500			; 取款最大数额(此数值一定要大于RobotBankGet)
RobotBankStoMul=33				; 存款百分比，百分之N 

////////////////////机器人控制结束

//控制玩家输赢
//控制玩家输赢局数大于0
CheatCount=0				
WinnerUserID=1 				;控制玩家的ID号


[斗地主(5倍)]

//刷新房间配置
Refresh = 0			;是否刷新配置

//库存更新
RefreshStorage = 0		; 是否刷新库存
StorageStart=0			; 库存起始值 
StorageDeduct=50		; 库存衰减值 StorageDeduct/1000 千分比
StorageMin=0			; 库存最小值
StorageMax=100			; 库存最大值
StorageRatio=60			; 库存控制输赢比例 百分之N 默认配置 游戏刚启动时读取  越大机器人赢率越高
StorageMinRatio=100		; 库存控制输赢比例 百分之N 当库存少于或等于最小值时输赢机率读取这里的值	 越大机器人赢率越高 杀分
StorageMaxRatio=0		; 库存控制输赢比例 百分之N 当库存大于或等于最大值时输赢机率读取这里的值  越大机器人赢率越高 送分
StorageEating=30		; 吃分百分比 当库存大于或者等于最大值时,系统一次性吃掉库存,并且开始送分机制
MaxScore=100			; 总注最大值,如果总注超过这个值,系统必定杀分
//库存减少值,每局结束之后会从库存值中减去此值,执行之后此值归0
StorageOff=0			
//总输赢分每局都会计算并且保存,包含税收,吃分,库存衰减 表示系统共赚多少钱
StorageLimit=0	
////////////////////库存控制结束


//机器人存款取款

RobotScoreMin=30				; 机器人的分数小于该值时执行取款
RobotScoreMax=500				; 机器人的分数大于该值时执行存款
RobotBankGet=100				; 取款最小数额(取款数是该值以上的一个随机数)
RobotBankGetBanker=500			; 取款最大数额(此数值一定要大于RobotBankGet)
RobotBankStoMul=33				; 存款百分比，百分之N 


////////////////////机器人控制结束

//控制玩家输赢局数大于0
CheatCount=0			
WinnerUserID=1 				;控制玩家的ID号
